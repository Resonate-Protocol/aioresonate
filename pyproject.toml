[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=62.3"]

[project]
name = "aioresonate"
# The version is set by GH action on release
authors = [
  { name = "The Resonate Protocol Authors", email = "resonate@openhomefoundation.org" },
]
classifiers = [
  "Environment :: Console",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = ["aiohttp>=3.9.2", "av>=15.0.0", "pillow>=11.0.0", "zeroconf>=0.147", "mashumaro>=3.14"]

description = "Async Python implementation of the Resonate Protocol."
license = { text = "Apache-2.0" }
readme = "README.md"
requires-python = ">=3.12"
version = "0.0.0"

[project.optional-dependencies]
test = [
  "codespell==2.4.1",
  "isort==6.0.1",
  "mypy==1.18.2",
  "pre-commit==4.3.0",
  "pre-commit-hooks==6.0.0",
  "pytest==8.4.2",
  "pytest-aiohttp==1.1.0",
  "pytest-cov==7.0.0",
  "syrupy==4.9.1",
  "tomli==2.2.1",
  "ruff==0.13.2",
]

[tool.codespell]
# ignore-words-list = ""

[tool.ruff]
fix = true
show-fixes = true

line-length = 100
target-version = "py312"

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "pep257"

[tool.ruff.lint.pylint]

max-args = 10
max-branches = 25
max-returns = 15
max-statements = 50

[tool.mypy]
platform = "linux"
python_version = "3.12"
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
enable_error_code = ["ignore-without-code", "redundant-self", "truthy-iterable"]
extra_checks = false
local_partial_types = true
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

packages = ["aioresonate"]

[tool.ruff.format]
# Force Linux/macOS line endings
line-ending = "lf"

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff.lint]
ignore = [
  "ANN002",  # Just annoying, not really useful
  "ANN003",  # Just annoying, not really useful
  "ANN401",  # Opinioated warning on disallowing dynamically typed expressions
  "D203",    # Conflicts with other rules
  "D213",    # Conflicts with other rules
  "D417",    # False positives in some occasions
  "EM101",   # Just annoying, not really useful
  "EM102",   # Just annoying, not really useful
  "FIX002",  # Just annoying, not really useful
  "PLR2004", # Just annoying, not really useful
  "PGH004",  # Just annoying, not really useful
  "PD011",   # Just annoying, not really useful
  "S101",    # assert is often used to satisfy type checking
  "TC001",   # Just annoying, not really useful
  "TC003",   # Just annoying, not really useful
  "TD002",   # Just annoying, not really useful
  "TD003",   # Just annoying, not really useful
  "TD004",   # Just annoying, not really useful
  "TRY003",  # Just annoying, not really useful
  "TRY400",  # Just annoying, not really useful
  "COM812",  # Conflicts with the Ruff formatter
  "S104",    # Allow "0.0.0.0" address
]

select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["aioresonate"]

[tool.ruff.lint.mccabe]
max-complexity = 25
